@using Models
@using DNP_Assignment1.Persistence
@inject FileContext _fileContext;

<div class="card">
    <div style="width: 800px" class="card-header">
        <h4>SignUp for free!</h4>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco</p>
    </div>
    <div class="card-body">
        <EditForm Model="_user" OnValidSubmit="@HandleRegistration">
            <h5>Personal information</h5>
            <div class="row" style="margin-left: 3px;">
                <div class="form-group">
                    <label for="firstNameInput">First Name</label>
                    <InputText placeholder="Enter first name" class="form-control" id="firstNameInput" @bind-Value="_user.FisrtName"/>
                </div>
                <div class="form-group" style="margin-left: 20px">
                    <label for="lastNameInput">Last Name</label>
                    <InputText placeholder="Enter last name" class="form-control" id="lastNameInput" @bind-Value="_user.LastName"/>
                </div>
            </div>
            <h5>LogIn information</h5>
            <div class="row" style="margin-left: 3px;">
                <div class="form-group">
                    <label for="firstNameInput">E-Mail</label>
                    <InputText placeholder="Enter your email" class="form-control" id="emailInput" @bind-Value="_user.Email"/>
                </div>
                <div class="form-group" style="margin-left: 20px">
                    <label for="lastNameInput">Password</label>
                    <InputText placeholder="Create password" class="form-control" id="passwordInput" @bind-Value="_user.Password"/>
                </div>
            </div>
            <div>
                <button type="submit" class="btn btn-success">SignUp</button>
            </div>
            @error
        </EditForm>
    </div>
</div>

@code {
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    
    string error = "";
    
    private User _user = new()
    {
        FisrtName = null,
        LastName = null,
        Password = null,
        Email = null,
    };

    private void HandleRegistration()
    {
        if (_user.FisrtName==null ||
            _user.LastName==null ||
            _user.Email==null ||
            _user.Password==null)
        {
            error = "Missing inputs";
        }
        else
        {
            _fileContext.AddUser(_user);
            NavigationManager.NavigateTo("/", forceLoad: false);
        }
        
        
    }

}
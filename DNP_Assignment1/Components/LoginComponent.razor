@using Microsoft.AspNetCore.Components
@using DNP_Assignment1.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<AuthorizeView>
    <NotAuthorized>
        <div style="margin: 10px;width: 45%" class="card">
            <div class="card-body">
                <h3>Login for more functions</h3>
                <p>Do you want to add new Adults to the system? Login to unlock this function!</p>
                <input class="form-control" placeholder="email@email.com" @bind-value="username"/>
                <input style="margin-top: 10px" type="password" class="form-control" placeholder="password" @bind-value="password"/>
                <div class="row" style="margin-left: 10px;">
                    <div>
                        <button style="margin-top: 10px;" type="button" class="btn btn-success" @onclick="PerformLogin">LogIn</button>
                    </div>
                    <div>
                        <NavLink style="margin-top: 10px;margin-left: 10px;" class="btn btn-primary" href="/registration">SignUp</NavLink>
                    </div>
                </div>
                <div>
                    <p>@errorMessage</p>
                </div>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div style="margin: 10px;width: 45%" class="card">
                    <div class="card-body">
                        <h3>Welcome</h3>
                        <h5>You are now able to discover more functions</h5>
                        <p>Under the section Add Adult you are able to create a new person. What's more you can check charts and see statistics</p>
                        <div class="row" style="margin-left: 10px;">
                            <div>
                                <button style="margin-top: 10px;" type="button" class="btn btn-primary" @onclick="PerformLogout">LogOut</button>
                            </div>
                        </div>
                    </div>
                </div>
    </Authorized>
</AuthorizeView>

    @code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin() {
        errorMessage = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout() {
        errorMessage = "";
        username = "";
        password = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        } catch (Exception e) { }
    }

}